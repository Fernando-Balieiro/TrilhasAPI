// <auto-generated />
using System;
using CaminhadasAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CaminhadasAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231106003322_addedRolesToDb")]
    partial class addedRolesToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CaminhadasAPI.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2de6b18d-94df-417a-a82b-a0fa8b163f1b"),
                            Name = "Very Easy"
                        },
                        new
                        {
                            Id = new Guid("0f90c6be-3751-4994-85f0-e6bad4231586"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("7b259c66-3cb0-43d1-89dc-26ef9ea88e14"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("3c837143-382a-4580-99be-ccd2a57fdc68"),
                            Name = "Hard"
                        },
                        new
                        {
                            Id = new Guid("861c7029-2e1c-45e0-acfa-a887f848f617"),
                            Name = "Very Hard"
                        });
                });

            modelBuilder.Entity("CaminhadasAPI.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegionImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a3afb46-dcd9-4722-8cb8-a8b0ed679363"),
                            Code = "SP",
                            Name = "São Paulo",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/1/11/Parque_do_ibirapuera_visto_do_c%C3%A9u.jpg"
                        },
                        new
                        {
                            Id = new Guid("2f252ac1-2f78-41f8-99c4-a7490eb458d1"),
                            Code = "MG",
                            Name = "Minas Gerais",
                            RegionImageUrl = "https://blog.entretrilhas.com.br/wp-content/uploads/2022/02/trekking_02-1024x576.jpg"
                        },
                        new
                        {
                            Id = new Guid("10864cb6-8add-4e76-a58c-ca789429cb7f"),
                            Code = "MT",
                            Name = "Mato Grosso",
                            RegionImageUrl = "https://blog.entretrilhas.com.br/wp-content/uploads/2022/02/trekking_02-1024x576.jpg"
                        });
                });

            modelBuilder.Entity("CaminhadasAPI.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uuid");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4faa439e-b267-4012-9abd-2ebb5379f17f"),
                            Description = "Uma trilha muito bonita de se fazer com boa companhia",
                            DifficultyId = new Guid("7b259c66-3cb0-43d1-89dc-26ef9ea88e14"),
                            LengthInKm = 13.0,
                            Name = "Trilha de Águas da Prata",
                            RegionId = new Guid("9a3afb46-dcd9-4722-8cb8-a8b0ed679363"),
                            WalkImageUrl = "https://prataexpedicoes.com.br/wp-content/uploads/2020/10/IMG_0064.jpg"
                        },
                        new
                        {
                            Id = new Guid("b346d5c1-31a6-4d1c-a659-23a9537ab4ad"),
                            Description = "Trilha muito boa com bastante aventura",
                            DifficultyId = new Guid("0f90c6be-3751-4994-85f0-e6bad4231586"),
                            LengthInKm = 13.0,
                            Name = "Trilha do ouro",
                            RegionId = new Guid("9a3afb46-dcd9-4722-8cb8-a8b0ed679363"),
                            WalkImageUrl = "https://prataexpedicoes.com.br/wp-content/uploads/2020/10/IMG_0064.jpg"
                        },
                        new
                        {
                            Id = new Guid("7fade95a-7037-4f68-8d16-8bf254f6fffa"),
                            Description = "Uma trilha de dificuldade difícil que leva ao pico mais alto do Brasil, o Pico da Bandeira, em Minas Gerais. A trilha é longa e íngreme, e exige bom condicionamento físico.",
                            DifficultyId = new Guid("7b259c66-3cb0-43d1-89dc-26ef9ea88e14"),
                            LengthInKm = 20.0,
                            Name = "Trilha do Pico da Bandeira",
                            RegionId = new Guid("2f252ac1-2f78-41f8-99c4-a7490eb458d1"),
                            WalkImageUrl = "https://upload.wikimedia.org/wikipedia/commons/8/8a/Pico_da_Bandeira_vista_MG.jpg"
                        });
                });

            modelBuilder.Entity("CaminhadasAPI.Models.Domain.Walk", b =>
                {
                    b.HasOne("CaminhadasAPI.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaminhadasAPI.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
